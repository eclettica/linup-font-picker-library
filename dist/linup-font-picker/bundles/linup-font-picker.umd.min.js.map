{"version":3,"sources":["ng://linup-font-picker/lib/linup-font-picker.service.ts","ng://linup-font-picker/lib/linup-font-picker.component.ts","ng://linup-font-picker/lib/selected-item.ts","ng://linup-font-picker/lib/ln-font-picker/ln-font-picker.component.ts","ng://linup-font-picker/lib/linup-font-picker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinupFontPickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'linup-font-picker',\n  template: `\n    <ln-font-picker>\n    </ln-font-picker>\n  `,\n  styles: [\n  ]\n})\nexport class LinupFontPickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export class SelectedItem {\n    fontFamily!: string;\n    value!: string;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SelectedItem } from '../selected-item';\n\n@Component({\n  selector: 'ln-font-picker',\n  templateUrl: './ln-font-picker.component.html',\n  styleUrls: ['./ln-font-picker.component.scss']\n})\nexport class LnFontPickerComponent implements OnInit {\n\n  @Input('listItems')\n  listItems!: Array<string>;\n\n  @Input('fontFamily')\n  fontFamily!: string;\n\n  @Input('closeOnSelect')\n  closeOnSelect!: boolean;\n\n  @Output()\n  onSelect = new EventEmitter<SelectedItem>();\n\n\n  arePickerShown: boolean = false;\n\n  constructor() {\n    console.log('ln-font-picker-component constructor');\n  }\n\n  ngOnInit(): void {\n    if (!this.listItems) {\n      this.listItems = [];\n      for (let i = 65; i < 123; i++) {\n        if (i >= 91 && i <= 96)\n          continue;\n        this.listItems.push(String.fromCharCode(i));\n      }\n    }\n\n    if(this.closeOnSelect == undefined || this.closeOnSelect == null)\n      this.closeOnSelect = true;\n\n  }\n\n  togglePicker() {\n    this.arePickerShown = !this.arePickerShown;\n  }\n\n  itemCliecked(item: string) {\n    console.log('item clicked...', item);\n    this.onSelect.emit({fontFamily: this.fontFamily, value: item});\n    if(this.closeOnSelect && this.closeOnSelect == true)\n      this.arePickerShown = false;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LinupFontPickerComponent } from './linup-font-picker.component';\nimport { LnFontPickerComponent } from './ln-font-picker/ln-font-picker.component';\n\n\n\n@NgModule({\n  declarations: [LinupFontPickerComponent, LnFontPickerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [LinupFontPickerComponent, LnFontPickerComponent]\n})\nexport class LinupFontPickerModule { }\n"],"names":["LinupFontPickerService","Injectable","args","providedIn","LinupFontPickerComponent","prototype","ngOnInit","Component","selector","template","SelectedItem","LnFontPickerComponent","this","listItems","i","push","String","fromCharCode","closeOnSelect","undefined","togglePicker","arePickerShown","itemCliecked","item","console","log","onSelect","emit","fontFamily","value","Input","Output","EventEmitter","NgModule","declarations","imports","CommonModule","exports","LinupFontPickerModule"],"mappings":"2UAAA,IAAAA,G,oBAECC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,W,4IAIZ,SAAAH,KCPF,IAAAI,GAeEA,EAAAC,UAAAC,SAAA,a,oBAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,oBACVC,SAAU,wD,sCAcZL,GALE,SAAAA,KCbF,IAAAM,EAAA,aCAAC,GA6BEA,EAAAN,UAAAC,SAAA,WACE,IAAKM,KAAKC,UAAW,CACnBD,KAAKC,UAAY,GACjB,IAAK,IAAIC,EAAI,GAAIA,EAAI,IAAKA,IACf,IAALA,GAAWA,GAAK,IAEpBF,KAAKC,UAAUE,KAAKC,OAAOC,aAAaH,IAIzCF,KAAKM,eAAiBC,WAAmC,MAAtBP,KAAKM,gBACzCN,KAAKM,eAAgB,IAIzBP,EAAAN,UAAAe,aAAA,WACER,KAAKS,gBAAkBT,KAAKS,gBAG9BV,EAAAN,UAAAiB,aAAA,SAAaC,GACXC,QAAQC,IAAI,kBAAmBF,GAC/BX,KAAKc,SAASC,KAAK,CAACC,WAAYhB,KAAKgB,WAAYC,MAAON,IACrDX,KAAKM,eAAuC,GAAtBN,KAAKM,gBAC5BN,KAAKS,gBAAiB,I,oBAjD3Bd,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAA,msC,44BAKCqB,EAAAA,MAAK5B,KAAA,CAAC,e,kBAGN4B,EAAAA,MAAK5B,KAAA,CAAC,gB,qBAGN4B,EAAAA,MAAK5B,KAAA,CAAC,mB,gBAGN6B,EAAAA,UAoCHpB,GA9BE,SAAAA,IALAC,KAAAc,SAAW,IAAIM,EAAAA,aAGfpB,KAAAS,gBAA0B,EAGxBG,QAAQC,IAAI,wC,oBCnBfQ,EAAAA,SAAQ/B,KAAA,CAAC,CACRgC,aAAc,CAAC9B,EAA0BO,GACzCwB,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACjC,EAA0BO,OAZtC2B,EAcqCA,EAPrC,SAAAA,K"}